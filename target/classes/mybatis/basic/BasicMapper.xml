<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BasicMapper">
    <!--通用查询条件-->
    <sql id="buildWhere">
        ${@com.lizhi.builder.SqlBuilder@current().buildWhere(resultMapId,#this['t_parameter'])}
    </sql>

    <!--生成查询字段-->
    <sql id="buildSelectField">
        ${@com.lizhi.builder.SqlBuilder@current().buildSelectFields(resultMapId,#this['t_parameter'])}
    </sql>

    <!--生成修改字段-->
    <sql id="buildUpdateField">
        <set>
            ${@com.lizhi.builder.SqlBuilder@current().buildUpdateFields(resultMapId,#this['t_parameter'])}
        </set>
    </sql>

    <!--生成后续状态字段 group by  order by  limit -->
    <sql id="buildGroupField">
        ${@com.lizhi.builder.SqlBuilder@current().buildGroupField(resultMapId,#this['t_parameter'])}
    </sql>

    <sql id="buildSortField">
        ${@com.lizhi.builder.SqlBuilder@current().buildSortField(resultMapId,#this['t_parameter'])}
    </sql>

    <sql id="buildLimitField">
        ${@com.lizhi.builder.SqlBuilder@current().buildLimitField(resultMapId,#this['t_parameter'])}
    </sql>

    <!--生成insert的字段 -->
    <sql id="buildInsertField">
        ${@com.lizhi.builder.SqlBuilder@current().buildInsertField(resultMapId)}
    </sql>

    <!--生成insert的内容 -->
    <sql id="buildInsertContent">
        ${@com.lizhi.builder.SqlBuilder@current().buildInsertContent(resultMapId)}
    </sql>


    <!--生成查询sql-->
    <sql id="buildSelectSql">
        <trim>
            select
            <include refid="BasicMapper.buildSelectField"/>
            from ${tableName}
            <where>
                <include refid="BasicMapper.buildWhere"/>
            </where>
            <include refid="BasicMapper.buildGroupField"/>
            <include refid="BasicMapper.buildSortField"/>
            <include refid="BasicMapper.buildLimitField"/>
        </trim>
    </sql>

    <!--生成删除sql-->
    <sql id="buildDeleteSql">
        <trim>
            delete from ${tableName}
            <where>
                <include refid="BasicMapper.buildWhere"/>
            </where>
        </trim>
    </sql>

    <!--生成InsertSql-->
    <sql id="buildInsertSql">
        <trim>
        insert into ${tableName} (<include refid="BasicMapper.buildInsertField"/>)
        values
            (<include refid="BasicMapper.buildInsertContent"/>)
        </trim>
    </sql>

    <!--生成BatchInsertSql-->
    <sql id="buildBatchInsertSql">
        <trim>
            insert into ${tableName}
            (<include refid="BasicMapper.buildInsertField"/>)
            values
            <foreach collection="t_parameters" item="t_parameter" separator="," index="index">
                (<include refid="BasicMapper.buildInsertContent"/>)
            </foreach>
        </trim>
    </sql>

    <!--生成UpdateSql-->
    <sql id="buildUpdateSql">
        <trim>
            update ${tableName}
            <include refid="BasicMapper.buildUpdateField"/>
            <where>
                <include refid="BasicMapper.buildWhere"/>
            </where>
        </trim>
    </sql>

    <!--生成查询数量sql-->
    <sql id="buildTotalSql">
        <trim>
            select count(0) as total from ${tableName}
            <where>
                <include refid="BasicMapper.buildWhere"/>
            </where>
            <include refid="BasicMapper.buildGroupField"/>
        </trim>
    </sql>
</mapper>